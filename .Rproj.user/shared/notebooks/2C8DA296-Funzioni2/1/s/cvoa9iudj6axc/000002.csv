"0",""
"0","gsummary.norm <- function(x, data=NULL, stats=F,"
"0","                            statsTest=F, # set true to show tests on symmetry and kurtosis"
"0","                            plots=c(""qq"") # valori: curve, qq"
"0","                            ) {"
"0","  "
"0","  "
"0","  if (!is.null(data)) {"
"0","    varname <- x"
"0","    x <- data[[x]]"
"0","  } else {"
"0","    varname <- deparse(substitute(x))"
"0","  }"
"0","  "
"0","  # (eventuale) print delle statistiche"
"0","  if (isTRUE(stats)) {"
"0","    "
"0","    print(paste(""NORMALITA' DI"", varname))"
"0","    print(summary.num(x, calcVar = T, calcIndexes = T)[c(""Mean"", ""Var."", ""Skew."", ""Kurt."")])"
"0","  }"
"0","  "
"0","  # (eventuale) test sulle statistiche"
"0","  if (isTRUE(statsTest)) {"
"0","    print(fBasics::dagoTest(x))"
"0","  }"
"0","  "
"0","  if (""curve"" %in% plots) {"
"0","    # istogramma delle probabilità con curva di densità e distrib. normale sovrapposta"
"0","    hist(x, probability=T, main = paste(""Densità di"", varname), xlab = varname)"
"0","    abline(v=mean(x), col=""red"")"
"0","    abline(v=median(x), col=""green"")"
"0","    lines(density(x), col=""blue"")"
"0","    "
"0","    xnorm <- seq(min(x), max(x), length.out=2500)"
"0","    lines(xnorm, dnorm(xnorm, mean(x), sd(x)), col=""red"")"
"0","  }"
"0","  "
"0","  if (""qq"" %in% plots) {"
"0","    qqnorm(x)"
"0","    qqline(x, col=""red"")"
"0","  }"
"0","}"
"0",""
"0","# gsummary.norm(mtcars$mpg, plots = c(""curve"", ""qq""), stats=T, statsTest = T)"
"0",""
